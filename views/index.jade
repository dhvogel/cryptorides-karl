doctype html
html
  head
    style.
      /* Always set the map height explicitly to define the size of the div
      * element that contains the map. */
      #map {
        height: 100%;
      }
      /* Optional: Makes the sample page fill the window. */
      html, body {
      height: 100%;
      margin: 0;
      padding: 0;
      }
  body
    #map
    script(src='/javascripts/http.min.js')
    script.
      var map;
      
      function bookBike(id) {
        http.post({
          url: '/jumpbikes/' + id,
          onload: function() {
            console.log(JSON.parse(this.responseText));
            alert('Bike ' + id + ' booked!');
          } 
        })
      }
      
      function initMap() {
        var myLatLng = {lat: 37.7749, lng: -122.4194};
        var map = new google.maps.Map(document.getElementById('map'), {
          zoom: 13,
          center: myLatLng
        });
        
        var image = {
         url: 'http://i.istockimg.com/file_thumbview_approve/57424520/3/stock-illustration-57424520-transportation-bicycle-flat-icon-with-long-shadow-eps10.jpg',
         // This marker is 20 pixels wide by 32 pixels high.
         scaledSize: new google.maps.Size(32, 32),
         // The origin for this image is (0, 0).
         origin: new google.maps.Point(0, 0),
         // The anchor for this image is the base of the flagpole at (0, 32).
         anchor: new google.maps.Point(0, 32)
        }
        
        var markers=[];
        var infowindows = [];
        var windowContents = [];
        var openWindow = 0;
        
        var bikeLocations = http.get({
            url: '/jumpbikes',
            onload: function() { 
              var bikes = JSON.parse(this.responseText)
              for (var i=0; i<bikes.length; i++) {
                var bike = bikes[i]
                var bikePosition = {
                  lat: bike.current_position.coordinates[1],
                  lng: bike.current_position.coordinates[0]
                }
                
                windowContents[i] = '<h3>Bike ID: ' + bike.id + '</h3>'
                  + '<h4>Address: ' + bike.address + '</h4>'
                  + '<button onclick="bookBike(' + bike.id + ')">Book This Bike</button>'
                
                infowindows[i] = new google.maps.InfoWindow({
                  content: windowContents[i]
                });
                
                markers[i] = new google.maps.Marker({
                  position: bikePosition,
                  map: map,
                  icon: image,
                  title: bike.name
                });
                
                markers[i].index = i;
                
                google.maps.event.addListener(markers[i], 'click', function() {
                    infowindows[openWindow].close();
                    console.log(this.index); // this will give correct index
                    openWindow = this.index;
                    infowindows[this.index].open(map,markers[this.index]);
                    map.panTo(markers[this.index].getPosition());
                }); 
              }  
            }
        });
        
        function CenterControl(controlDiv, map) {

          // Set CSS for the control border.
          var controlUI = document.createElement('div');
          controlUI.style.backgroundColor = '#4169E1';
          controlUI.style.boxShadow = '0 2px 6px rgba(0,0,0,.3)';
          controlUI.style.cursor = 'pointer';
          controlUI.style.marginBottom = '22px';
          controlUI.style.textAlign = 'center';
          controlUI.title = 'Login with Coinbase';
          controlDiv.appendChild(controlUI);

          // Set CSS for the control interior.
          var controlText = document.createElement('div');
          controlText.style.color = '#fff';
          controlText.style.fontFamily = 'Roboto,Arial,sans-serif';
          controlText.style.fontSize = '16px';
          controlText.style.lineHeight = '38px';
          controlText.style.paddingLeft = '5px';
          controlText.style.paddingRight = '5px';
          controlText.innerHTML = 'Login with Coinbase';
          controlUI.appendChild(controlText);

          // Setup the click event listeners: simply set the map to Chicago.
          controlUI.addEventListener('click', function() {
            function oauthSignIn() {
                // Google's OAuth 2.0 endpoint for requesting an access token
                var oauth2Endpoint = 'https://www.coinbase.com/oauth/authorize';

                // Create <form> element to submit parameters to OAuth 2.0 endpoint.
                var form = document.createElement('form');
                form.setAttribute('method', 'GET'); // Send as a GET request.
                form.setAttribute('action', oauth2Endpoint);

                // Parameters to pass to OAuth 2.0 endpoint.
                var params = {'client_id': '5488cbdec5d0893c05cf305e88d022b991f4b4714054258dee1866779b797000',
                              'response_type': 'code',
                              'scope': 'wallet:user:read,wallet:accounts:read',
                              'state': 'test-state'};

                // Add form parameters as hidden input values.
                for (var p in params) {
                  var input = document.createElement('input');
                  input.setAttribute('type', 'hidden');
                  input.setAttribute('name', p);
                  input.setAttribute('value', params[p]);
                  form.appendChild(input);
                }

                // Add form to page and submit it to open the OAuth 2.0 endpoint.
                document.body.appendChild(form);
                form.submit();
            }
            
            oauthSignIn()
          });

      }
      
        var centerControlDiv = document.createElement('div');
        var centerControl = new CenterControl(centerControlDiv, map);
        
        centerControlDiv.index = 1;
        map.controls[google.maps.ControlPosition.TOP_CENTER].push(centerControlDiv);

      }
    script(async='', defer='', src='https://maps.googleapis.com/maps/api/js?key=AIzaSyCqfh-3un2PUzg8P0R4Xg-W-yK6JYaGCI8&callback=initMap')
    p test
    
